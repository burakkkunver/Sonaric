namespace: rollkit

beacon-kit-base:
  metadata:
    name: rollkit
    description: |
      Beacon Kit node with Rollkit.
      BeaconKit is a modular framework for building EVM-based consensus clients.
      Rollkit is a modular framework for building EVM-based rollups.
      Combined, they provide a complete solution for building EVM-based blockchains.
    website: https://www.berachain.com/
    source: https://github.com/rollkit/beacon-kit/
    tags: blockchain, rollup, beacon, evm, rollkit
    publisher: sonaric
    icon: https://avatars.githubusercontent.com/u/96059542?s=200&v=4
    twitter: https://x.com/berachain
    discord: https://discord.com/invite/berachain
    telegram: https://t.me/BerachainPortal
    version: 1.0.0
    private: false
    wallet-support: import-key, export-key, list-keys
  requirements:
    defines: requirements
    CPU: "8 Cores"
    RAM: 49152
    GPU: false
    disk: 1024

beacon-kit:
  defines: runnable
  inherits: rollkit/beacon-kit-base
  depends:
    wait-for:
      runnables:
        - rollkit/geth
        - rollkit/local-da
  containers:
    beacon-kit:
      image: sonaric.azurecr.io/public/reacond:latest
      entrypoint: /home/entrypoint.sh
      ports:
        - 26656:26656
        - 26656:26656/udp
        - 36656:36656
        - 36657:36657
        - 9290:9290
        - 9090:9090
      paths:
        - <- `${monk-volume-path}/geth:/geth`
        - <- `${monk-volume-path}/beacond:/beacond`
  connections:
    geth:
      runnable: rollkit/geth
      service: rpc-service
    da-conn:
      runnable: rollkit/local-da
      service: json-rpc
  services:
    beacon-service:
      container: beacon-kit
      protocol: tcp
      port: 26656
      host-port: 26656
      publish: true
    udp-service:
      container: beacon-kit
      protocol: udp
      port: 26656
      host-port: 26656
      publish: true
    p2p-service:
      container: beacon-kit
      protocol: tcp
      port: 36656
      host-port: 36656
      publish: true
    rpc-service:
      container: beacon-kit
      protocol: tcp
      port: 36657
      host-port: 36657
      publish: true
    grpc-service:
      container: beacon-kit
      protocol: tcp
      port: 9290
      host-port: 9290
      publish: true
  variables:
    da-address:
      type: string
      value: <- "http://"  connection-hostname("da-conn") ":" connection-port("da-conn") concat-all
      env: DA_ADDRESS
    rpc-dial-url:
      type: string
      value: <- "http://"  connection-hostname("geth") ":" connection-port("geth") concat-all
      env: RPC_DIAL_URL
  files:
    entrypoint:
      container: beacon-kit
      path: /home/entrypoint.sh
      contents: <<< files/beacon-kit/entrypoint.sh
      mode: 0755

geth:
  defines: runnable
  metadata:
    name: "Geth Ethereum Client"
    description: |
      Official Go implementation of the Ethereum protocol.
      Geth is an Ethereum execution client, providing the Ethereum Virtual Machine (EVM) environment used in the Rollkit BeaconKit setup."
    website: "https://geth.ethereum.org/"
    publisher: Ethereum Foundation
    icon: "https://ethereum.org/_next/static/media/eth-diamond-purple-purple.74f3909b.png"
    version: 1.0.0
    source: https://github.com/ethereum/go-ethereum
    tags: blockchain, ethereum, execution-client
    private: false
  containers:
    geth-container:
      image: ethereum/client-go:latest
      entrypoint: /home/entrypoint.sh
      ports:
        - 8545:8545
        - 30303:30303
        - 8551:8551
      paths:
        - <- `${monk-volume-path}/geth:/geth`
  services:
    rpc-service:
      container: geth-container
      protocol: tcp
      port: 8551
      host-port: 8551
      publish: true
    p2p-service:
      container: geth-container
      protocol: tcp
      port: 30303
      host-port: 30303
      publish: true
    http-service:
      container: geth-container
      protocol: tcp
      port: 8545
      host-port: 8545
      publish: true
  files:
    entrypoint:
      container: geth-container
      path: /home/entrypoint.sh
      contents: <<< files/beacon-kit/entrypoint-geth.sh
      mode: 0755


gm-portal:
  defines: runnable
  metadata:
    name: "GM Portal"
    description: "GM Portal is a simple web application that interacts with the Rollkit GM rollup."
    icon: "https://avatars.githubusercontent.com/u/120482652?s=200&v=4"
  depends:
    wait-for:
      runnables:
        - rollkit/geth
        - rollkit/local-da
        - rollkit/beacon-kit
  containers:
    gm-portal:
      image: sonaric.azurecr.io/public/gm-portal:latest
      entrypoint: /home/entrypoint.sh
      ports:
        - 5173:5173
  connections:
    geth:
      runnable: rollkit/geth
      service: http-service
  variables:
    defines: variables
    rpc-url:
      type: string
      value: <- connection-ip("geth") ":" connection-port("geth") concat-all
      env: RPC_URL
    rpc-api-host:
      type: string
      value: localhost
#      value: <- ip-address-public
      env: RPC_API_HOST
    private-key:
      type: string
      value: "0xfffdbb37105441e14b0ee6330d855d8504ff39e705c3afa8f859ac9865f99306"
      env: PRIVATE_KEY
  files:
    entrypoint:
      container: gm-portal
      path: /home/entrypoint.sh
      contents: |
        #!/bin/bash
        set -e
        if ! command -v jq &> /dev/null
        then
          apt-get install -y jq
        fi
        cd contracts
        $FOUNDRY_BIN_DIR/forge script ./script/GmPortal.s.sol --rpc-url $RPC_URL --private-key $PRIVATE_KEY --broadcast
        export CONTRACT_ADDRESS=$(jq -r '.transactions[0].contractAddress' /app/contracts/broadcast/GmPortal.s.sol/80084/run-latest.json)
        # Replace the current contractAddress line in /app/src/App.tsx
        sed -i.bak "s/const contractAddress = '.*'/const contractAddress = '${CONTRACT_ADDRESS}'/" /app/src/App.tsx

        $FOUNDRY_BIN_DIR/cast send $CONTRACT_ADDRESS \
        "gm(string)" "ooga booga" \
        --private-key $PRIVATE_KEY \
        --rpc-url $RPC_URL

        $FOUNDRY_BIN_DIR/cast call $CONTRACT_ADDRESS "getTotalGms()" --rpc-url $RPC_URL
        cd /app
        yarn && yarn dev --host 0.0.0.0
      mode: 0755
    transfer:
      container: gm-portal
      path: /home/transfer.sh
      mode: 0755
      contents: |
        #!/bin/bash
        set -e
        # get from argument of the script
        export RECEIVER=$1
        $FOUNDRY_BIN_DIR/cast send --private-key $PRIVATE_KEY $RECEIVER --value 1ether --rpc-url $RPC_URL
  services:
    gm-portal-service:
      container: gm-portal
      protocol: tcp
      port: 5173
      host-port: 5173
      publish: true
  actions:
    transfer:
      container: gm-portal
      description: "Transfer 1 ether to the address."
      arguments:
        address:
          type: string
          description: "Address of the receiver."
          required: true
      code: |
        exec("gm-portal", "/bin/bash", "-c", `/home/transfer.sh ${args["address"]}`)
    balance:
      arguments:
        address:
          type: string
          description: "Address of the receiver."
          required: true
      container: gm-portal
      description: "Get the balance of the account."
      code: |
        exec("gm-portal", "/bin/bash", "-c", `$FOUNDRY_BIN_DIR/cast balance ${args["address"]} --rpc-url $RPC_URL`)



beacon-kit-evm:
  defines: process-group
  metadata:
    name: "Rollkit Beacon Kit"
    description: "Rollkit rollup example using Beacon Kit, Geth and Local DA"
    website: "https://rollkit.dev/"
    publisher: sonaric
    icon: "https://avatars.githubusercontent.com/u/120482652?s=200&v=4"
    version: 1.0.0
    source:
  runnable-list:
    - rollkit/local-da
    - rollkit/beacon-kit
    - rollkit/geth
    - rollkit/gm-portal
