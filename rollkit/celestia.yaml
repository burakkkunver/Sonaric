namespace: rollkit
#------------------------------------------------------------
# Celestia
#------------------------------------------------------------
celestia-da:
    defines: runnable
    inherits: celestia/light-mocha
    metadata:
        name: "Celestia Light Node"
        description: "Celestia Light Node used as a Data Availability Layer for the Rollkit GM rollup. Network: Mocha"
        website: "https://celestia.org/"
        publisher: celestia
        icon: "https://avatars.githubusercontent.com/u/54859940?s=200&v=4"
        version: 1.0.0
        source:
    checks:
        readyness:
            code: |
                exec("celestia", "/bin/bash", "-c", "celestia $NODE_TYPE auth admin --p2p.network $P2P_NETWORK") "" not-equal?
            period: 5
            initialDelay: 10
    containers[override]:
        celestia:
            image: ghcr.io/celestiaorg/celestia-node
            image-tag: <- `${version}`
            entrypoint: /home/start.sh
            ports:
                - 2121:2121
                - 26658:26658
                - 26659:26659
            environment:
                - <- `P2P_NETWORK=${network}`
                - <- `NODE_TYPE=${node-type}`
                - <- `RPC_URL=${rpc-url}`
            paths:
                - <- `${monk-volume-path}/celestia-${node-type}-${network}:/home/celestia`
    actions:
        get-auth-token:
            description: "Get the auth token for the Celestia Light node."
            code: exec("celestia", "/bin/bash", "-c", "celestia $NODE_TYPE auth admin --p2p.network $P2P_NETWORK")
    services[override]:
        rpc:
            container: celestia
            port: 26658
            host-port: 26658
            protocol: tcp
            publish: true
        tcp:
            container: celestia
            port: 2121
            host-port: 2121
            protocol: tcp
            publish: true
        p2p:
            container: celestia
            port: 26659
            host-port: 26659
            protocol: tcp
            publish: true

celestia-gm:
    defines: runnable
    inherits: rollkit/gm
    depends[override]:
        wait-for:
            runnables:
                - rollkit/celestia-da
    containers:
        gm:
            image: ghcr.io/rollkit/gm:latest
            entrypoint: /home/start.sh
            bash: ""
    files:
        start:
            container: gm
            path: /home/start.sh
            contents: |
                #!/bin/bash
                if [ -z "$DA_AUTH_TOKEN" ]; then
                  echo "DA_AUTH_TOKEN is empty"
                  exit 1
                fi
                
                DA_BLOCK_HEIGHT=$(curl https://rpc-mocha.pops.one/block | jq -r '.result.block.header.height')
                DA_ADDRESS="http://$DA_HOST:$DA_PORT"
                echo "DA_ADDRESS: $DA_ADDRESS"
                echo "DA_BLOCK_HEIGHT: $DA_BLOCK_HEIGHT"
                rollkit start \
                --rollkit.aggregator \
                --rollkit.da_address $DA_ADDRESS \
                --rollkit.da_auth_token $DA_AUTH_TOKEN \
                --rollkit.da_namespace $DA_NAMESPACE \
                --rollkit.da_start_height $DA_BLOCK_HEIGHT \
                --minimum-gas-prices="$MINIMUM_GAS_PRICES"
            mode: 0755
    variables:
        da-host:
            type: string
            value: <- connection-hostname("da-conn")
            env: DA_HOST
        da-port:
            type: string
            value: <- connection-port("da-conn")
            env: DA_PORT
        da-token:
            type: string
            value: <- act("rollkit/celestia-da/get-auth-token") trim
            env: DA_AUTH_TOKEN
        da-namespace:
            type: string
            value: "00000000000000000000000000000000000000000008e5f679bf7116cb"
            env: DA_NAMESPACE
        minumum-gas-prices:
            type: string
            value: "0.025stake"
            env: MINIMUM_GAS_PRICES

    connections[override]:
        da-conn:
            runnable: rollkit/celestia-da
            service: rpc

celestia-frontend:
    defines: runnable
    inherits: rollkit/frontend
    affinity[override]:
    depends[override]:
        wait-for:
            runnables:
                - rollkit/celestia-gm
    containers:
        frontend:
            image: us-central1-docker.pkg.dev/sonaric-platform/sonaric-public/gm-frontend:latest
            ports:
                - 3000:3000 # HTTP
    variables:
        gm-api-address:
            type: string
            env: RPC_API_HOST
            value: <- "http://" connection-hostname("gm-conn") ":" connection-port("gm-conn") concat-all
        gm-rest-api-address:
            type: string
            env: REST_API_HOST
            value: <- "http://" connection-hostname("gm-rest-conn") ":" connection-port("gm-rest-conn") concat-all
    connections[override]:
        gm-conn:
            runnable: rollkit/celestia-gm
            service: json-rpc
        gm-rest-conn:
            runnable: rollkit/celestia-gm
            service: rpc-http

hello-world-celestia:
    defines: process-group
    metadata:
        name: "Rollkit GM Rollup Example Deployment with Celestia"
        description: "Complete Rollkit GM rollup example with a Celestia DA and a frontend. After starting, call the 'rollkit/celestia-da/get-address' to find which wallet has to be funded with TIA in order to be able to transact."
        website: "https://rollkit.dev/"
        publisher: sonaric
        icon: "https://avatars.githubusercontent.com/u/120482652?s=200&v=4"
        version: 1.0.0
        source: https://github.com/rollkit/gm
        tags: blockchain
        private: false
    runnable-list:
        - rollkit/celestia-da
        - rollkit/celestia-gm
        - rollkit/celestia-frontend