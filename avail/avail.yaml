namespace: avail

common:
    metadata:
        name: avail
        shortname: Avail
        website: https://docs.availproject.org/
        publisher: sonaric
        icon: https://avatars.githubusercontent.com/u/125018949?s=200&v=4
        version: 1.0.0
        currency: AVAIL
        source: https://github.com/availproject
        tags: blockchain
        private: false
        wallet-support: keys-rotate
# ---------------------- #
# ---- FULL NODES ------ #
# ---------------------- #
avail:
    defines: runnable
    metadata:
        name: Avail
        description: |
            Avail full node.
            Full nodes maintain the blockchain's current state but do not store its entire history. Optimized for quick access to current data, they are ideal for tasks like transaction verification.
    inherits: ./common
    containers:
        node:
            image: availj/avail
            image-tag: <- `${version}`
            arch: linux/amd64
            cmd: <- `--chain ${chain} --name ${name} -d /da/state`
            ports:
                - 30333:30333
                - 9615:9615
            paths:
                - <- `${monk-volume-path}/avail-${chain}/state:/da/state`
            restart: unless-stopped
    variables:
        version:
            description: "Version to use."
            type: string
            value: "v1.11.0.0"
        chain:
            description: "Blockchain network to join."
            type: string
            value: "goldberg"
        name:
            description: "Name of the node."
            type: string
            value: "SonaricAvailNode"
    services:
        p2p-service:
            container: node
            port: 30333
            protocol: tcp
            host-port: 30333
            publish: true

    requirements:
        defines: requirements
        CPU: "4 Cores"
        RAM: 8192
        GPU: false
        disk: 300

    actions:
        health:
            description: "Check the health of the node and syncing status"
            code: exec("node", "/usr/local/bin/health.sh")

    files:
        health:
            container: node
            path: /usr/local/bin/health.sh
            contents: |
                #!/bin/bash
                curl -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "system_health"}' http://localhost:9944
            mode: 0755


avail-turing:
    defines: runnable
    inherits: ./avail
    metadata:
        name: Avail Turing
        description: "Avail full node for Turing network"
    variables:
        chain: "turing"
        value: "SonaricAvailTuringNode"
        version: "v2.2.0.0-rc1"

avail-rpc:
    defines: runnable
    inherits: ./avail
    metadata:
        name: Avail RPC Node
        description: |
            Avail full node with RPC endpoint enabled.
    containers:
        node:
            cmd: <- `--chain ${chain} --name ${name} -d /da/state --rpc-external --rpc-port ${rpc-port} --rpc-cors=${rpc-cors}`
            ports:
                - <- `${rpc-port}:${rpc-port}`
    variables:
        rpc-port:
            description: "Port for the RPC service."
            type: int
            value: 9944
        rpc-cors:
            description: "CORS for the RPC service."
            type: string
            value: "all"
    services:
        rpc-service:
            container: node
            port: 9944
            protocol: tcp
            host-port: 9944
            publish: true
# ---------------------- #
#    LIGHT CLIENT        #
# ---------------------- #
light:
    defines: runnable
    inherits: ./common
    metadata:
        name: Avail Light Client
        description: |
            Light clients are optimized for low resource consumption and are ideal for mobile devices or low-power hardware.
    requirements:
        defines: requirements
        CPU: "2 Cores"
        RAM: 4096
        GPU: false
        disk: 20
    containers:
        avail-light:
            image: availj/avail-light
            image-tag: <- `${version}`
            arch: linux/amd64
            entrypoint: /home/avail/entrypoint.sh
            ports:
                - 7001:7001
                - 37000:37000
            paths:
                - <- `${monk-volume-path}/avail-lc/data:/home/avail/data`
                - <- `${monk-volume-path}/avail-lc/identity:/home/avail/identity`
                - <- `${monk-volume-path}/avail-lc/config:/home/avail/config`
    files:
        config-file:
            container: avail-light
            path: <- `${config-path}`
            contents: <<< files/light/config.toml
            mode: 0755
        identity-file:
            container: avail-light
            path: <- `${identity-path}`
            contents: <<< files/light/identity.toml
            mode: 0755
        entrypoint:
            container: avail-light
            path: /home/avail/entrypoint.sh
            contents: |
                #!/bin/bash
                # Start command construction
                cmd="--config {{ v "config-path" }} --identity {{ v "identity-path" }}"
                
                # Add conditional parameters
                [[ -n "{{ v "network" }}" ]] && cmd+=" --network {{ v "network" }}"
                [[ -n "{{ v "port" }}" ]] && cmd+=" --port {{ v "port" }}"
                [[ -n "{{ v "seed" }}" ]] && cmd+=" --seed {{ v "seed" }}"
                [[ -n "{{ v "secret-key" }}" ]] && cmd+=" --secret-key {{ v "secret-key" }}"
                [[ "{{ v "finality-sync-enable" }}" == "true" ]] && cmd+=" --finality-sync-enable"
                
                # Execute the command
                echo "Starting avail-light with command: avail-light $cmd"
                exec avail-light $cmd
            mode: 0755

    variables:
        version:
            description: "Version to use."
            type: string
            value: "v1.7.10"
        network:
            description: "Network to connect to."
            type: string
            value: ""
        config-path:
            description: "Path to the configuration file."
            type: string
            value: "/home/avail/config.toml"
        identity-path:
            description: "Path to the identity file."
            type: string
            value: "/home/avail/identity.toml"
        port:
            description: "LibP2P listener port (overrides port from config file)."
            type: string
            value: ""
        seed:
            description: "Seed string for libp2p keypair generation."
            type: string
            value: ""
        secret-key:
            description: "Ed25519 private key for libp2p keypair generation."
            type: string
            value: ""
        finality-sync-enable:
            description: "Enable finality sync."
            type: bool
            value: false
    services:
        http-service:
            container: avail-light
            port: 7001
            protocol: tcp
            host-port: 7001
            publish: true
        tcp-service:
            container: avail-light
            port: 37000
            protocol: tcp
            host-port: 37000
            publish: true

light-mainnet:
    defines: runnable
    inherits: ./light
    metadata:
        name: Avail Light Client Mainnet
        description: |
            Avail light client for the mainnet network.
    variables:
        network: "mainnet"
        version: "avail-light-client-v1.11.1"
# ---------------------- #
#    VALIDATOR NODES
# ---------------------- #
validator-base:
    inherits: ./avail
    metadata:
        name: Avail Validator
        description: |
            Avail validator node
    containers:
        node:
            entrypoint: /usr/local/bin/entrypoint.sh
            arch: linux/amd64
            cmd: ""
            paths:
                - <- `${monk-volume-path}/avail-validator-${chain}/node-data:/da/node-data`
            ports:
                - 9944:9944
    variables:
        version:
            type: string
            value: "v2.2.2.0-rc1"
        chain:
            type: string
        name:
            type: string
            value: "SonaricAvailValidator"
    files:
        start:
            container: node
            path: /usr/local/bin/start.sh
            contents: |
                #!/bin/bash
                echo "Starting validator node"
                avail-node --chain {{ v "chain" }} --name {{ v "name" }} -d /da/node-data --validator
            mode: 0755
        entrypoint:
            container: node
            path: /usr/local/bin/entrypoint.sh
            contents: <<< files/scripts/validator-entrypoint.sh
            mode: 0755
        restart:
            container: node
            path: /usr/local/bin/restart.sh
            contents: |
                #!/bin/bash
                # Send the USR1 signal to the process with PID 1. It should restart the avail process.
                kill -USR1 1
            mode: 0755
        rotate-keys:
            container: node
            path: /usr/local/bin/rotate-keys.sh
            contents: <<< files/scripts/rotate-keys.sh
            mode: 0755
    actions:
        keys-rotate:
            description: "Generate new session keys."
            code: exec("node", "/usr/local/bin/rotate-keys.sh")
    requirements:
        defines: requirements
        CPU: "4 Cores"
        RAM: 8192
        GPU: false
        disk: 50
    services:
        rpc-service:
            container: node
            port: 9944
            protocol: tcp
            host-port: 9944
            publish: true

validator:
    defines: runnable
    inherits: ./validator-base
    metadata:
        name: Avail Validator
        description: |
            Avail validator node for Goldberg network
            Goldberg is deprecated and will be decomissioned soon, but it is still available for testing purposes.
    variables:
        chain: "goldberg"
        name: "SonaricAvailValidatorGoldberg"
        version: "v1.11.0.0"
    files:
        start:
            container: node
            path: /usr/local/bin/start.sh
            contents: |
                #!/bin/bash
                exec data-avail --chain {{ v "chain" }} --name {{ v "name" }} -d /da/node-data --validator
            mode: 0755

validator-turing:
    defines: runnable
    inherits: ./validator-base
    metadata:
        name: Avail Validator Turing
        description: |
            Avail validator node for Turing network
            The Turing Testnet is the latest test network of the Avail Project.
    variables:
        chain: "turing"
        name: "SonaricAvailValidatorTuring"

validator-dev:
    defines: runnable
    inherits: ./validator-base
    metadata:
        name: Avail Validator Dev
        description: |
            Avail validator node for development
            Running with --dev flag. This flag combines the following flags into one: --chain=dev, --force-authoring, --alice, --tmp, and --rpc-cors=all
    files:
        start:
            container: node
            path: /usr/local/bin/start.sh
            contents: |
                #!/bin/bash
                echo "Starting validator node"
                exec avail-node --name {{ v "name" }} -d /da/node-data --validator --dev
            mode: 0755
    variables:
        chain: ""
        name: "SonaricAvailValidatorDev"

