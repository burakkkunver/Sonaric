namespace: rollkit

gm:
  defines: runnable
  metadata:
    name: "Rollkit GM"
    description: "Rollkit GM node."
    website: "https://rollkit.dev/"
    publisher: sonaric
    icon: "https://avatars.githubusercontent.com/u/120482652?s=200&v=4"
    version: 1.0.0
    source: https://github.com/rollkit/rollkit
    tags: blockchain
    private: false
    wallet-support: list-keys, get-balance, fund-wallet
  depends:
    wait-for:
      runnables:
        - rollkit/local-da
  containers:
    gm:
      image: ghcr.io/rollkit/gm:latest
      bash: "rollkit start --rollkit.aggregator --rollkit.da_address http://$DA_HOST:$DA_PORT"
      ports:
        - 26657:26657 # JSON RPC
        - 26656:26656 # P2P
        - 1317:1317 # RPC HTTP
        - 9090:9090 # GRPC
  services:
    json-rpc:
      container: gm
      protocol: TCP
      port: 26657
      host-port: 26657
      publish: true
    p2p:
      container: gm
      protocol: TCP
      port: 26656
      host-port: 26656
      publish: true
    rpc-http:
      container: gm
      protocol: TCP
      port: 1317
      host-port: 1317
      publish: true # TODO: maybe it has to be closed?
  variables:
    da-host:
      type: string
      value: <- connection-hostname("da-conn")
      env: DA_HOST
    da-port:
      type: string
      value: <- connection-port("da-conn")
      env: DA_PORT
  connections:
    da-conn:
      runnable: rollkit/local-da
      service: json-rpc
  actions:
    list-keys:
        description: "List keys in the wallet."
        code: exec("gm", "/bin/bash", "-c", "rollkit keys list --keyring-backend test")
    get-balance:
        description: "Get the balance of the GM account."
        arguments:
            address:
                type: string
                description: "Address to get the balance of."
                required: true
        code: exec("gm", "/bin/bash", "-c", `rollkit query bank balances ${args["address"]}`)
    fund-wallet:
      description: "Send funds from the hardcoded source to the target address."
      arguments:
        from:
          type: string
          description: "Source address. Default is the genesis block of the rollup"
          default: "gm1r2udsh4za7r7sxvzy496qfazvjp04j4zgytve3"
          required: false
        to:
          type: string
          description: "Recipient address (target)."
          required: true
        amount:
          type: string
          description: "Amount to send (e.g., '42069')."
          required: true
        fees:
          type: string
          description: "Fee to include in the transaction (default: '500stake')."
          required: false
          default: "5000stake"
      code: exec("gm", "/bin/bash", "-c", `echo 'y' | rollkit tx bank send ${args["from"]} ${args["to"]} ${args["amount"]}stake --keyring-backend=test --chain-id gm --fees ${args["fees"]}`)
local-da:
  defines: runnable
  containers:
    local-da:
      image: ghcr.io/rollkit/local-da:v0.2.1
      ports:
        - 7980:7980 # JSON RPS for the DA
  services:
    json-rpc:
      container: local-da
      protocol: TCP
      port: 7980
      host-port: 7980

frontend:
  defines: runnable
  affinity:
    defines: affinity
    tag: local # we have to run on local
  depends:
    wait-for:
      runnables:
        - rollkit/gm
  containers:
    frontend:
      image: us-central1-docker.pkg.dev/sonaric-platform/sonaric-public/gm-frontend:latest # todo: make own image with params
      ports:
        - 3000:3000 # HTTP
  variables:
    defines: variables
    gm-api-address:
      type: string
      value: <- "http://" connection-hostname("gm-conn") ":" connection-port("gm-conn") concat-all
#      value: <- "http://" peer-ip-address("rollkit/gm") ":" connection-port("gm-conn") concat-all
      env: RPC_API_HOST
    gm-rest-api-address:
      type: string
      value: <- "http://" connection-hostname("gm-rest-conn") ":" connection-port("gm-rest-conn") concat-all
#      value: <- "http://" peer-ip-address("rollkit/gm") ":" connection-port("gm-rest-conn") concat-all
      env: REST_API_HOST
    http-port:
      type: string
      value: 1317
      env: HTTP_RPC_PORT
  connections:
    gm-conn:
      runnable: rollkit/gm
      service: json-rpc
    gm-rest-conn:
      runnable: rollkit/gm
      service: rpc-http
  services:
    http:
      container: frontend
      protocol: TCP
      port: 3000
      host-port: 3000
      publish: true

hello-world:
  defines: process-group
  runnable-list:
    - rollkit/local-da
    - rollkit/gm
    - rollkit/frontend

#------------------------------------------------------------
# Celestia
#------------------------------------------------------------
celestia-mocha-da:
  defines: runnable
  inherits: celestia/light-mocha
  services:
    rpc1:
      container: celestia
      port: 26657
      host-port: 26657
      protocol: tcp
      publish: false

celestia-gm:
  defines: runnable
  inherits: rollkit/gm
  depends[override]:
    wait-for:
      runnables:
        - rollkit/celestia-mocha-da
  containers:
    gm:
      image: ghcr.io/rollkit/gm:latest
      entrypoint: /home/start.sh
      bash: ""
  files:
    start:
      container: gm
      path: /home/start.sh
      contents: |
        #!/bin/bash
        DA_BLOCK_HEIGHT=$(curl https://rpc-mocha.pops.one/block | jq -r '.result.block.header.height')
        DA_ADDRESS="http://$DA_HOST:$DA_PORT"
        rollkit start \
        --rollkit.aggregator \
        --rollkit.da_address $DA_ADDRESS \
        --rollkit.da_auth_token $DA_AUTH_TOKEN \
        --rollkit.da_namespace $DA_NAMESPACE \
        --rollkit.da_start_height $DA_BLOCK_HEIGHT \
        --minimum-gas-prices="$MINIMUM_GAS_PRICES"
      mode: 0755
  variables:
    da-host:
      type: string
      value: <- connection-hostname("da-conn")
      env: DA_HOST
    da-port:
      type: string
      value: <- connection-port("da-conn")
      env: DA_PORT
    da-token:
      type: string
      value: <- act("rollkit/celestia-mocha-da/get-auth-token") trim
      env: DA_AUTH_TOKEN
    da-namespace:
      type: string
      value: "00000000000000000000000000000000000000000008e5f679bf7116cb"
      env: DA_NAMESPACE
    minumum-gas-prices:
      type: string
      value: "0.025stake"
      env: MINIMUM_GAS_PRICES

  connections[override]:
    da-conn:
      runnable: rollkit/celestia-mocha-da
      service: rpc

celestia-frontend:
  defines: runnable
  inherits: rollkit/frontend
  affinity[override]:
  depends[override]:
      wait-for:
        runnables:
            - rollkit/celestia-gm
  variables:
    gm-api-address:
      type: string
      env: RPC_API_HOST
      value: <- "http://" connection-hostname("gm-conn") ":" connection-port("gm-conn") concat-all
    gm-rest-api-address:
      type: string
      env: REST_API_HOST
      value: <- "http://" connection-hostname("gm-rest-conn") ":" connection-port("gm-rest-conn") concat-all
  connections[override]:
    gm-conn:
      runnable: rollkit/celestia-gm
      service: json-rpc
    gm-rest-conn:
      runnable: rollkit/celestia-gm
      service: rpc-http

hello-world-celestia:
  defines: process-group
  runnable-list:
      - rollkit/celestia-mocha-da
      - rollkit/celestia-gm
      - rollkit/celestia-frontend

        
